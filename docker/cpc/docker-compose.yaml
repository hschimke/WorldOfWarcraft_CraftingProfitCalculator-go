version: "3.9"
services:
  web:
    image: cpc/web-serv
    ports:
      - "8080:8080"
    volumes:
      - static_files:/data/static_files
    restart: unless-stopped
    environment:
      - CLIENT_ID
      - CLIENT_SECRET
      - LOG_LEVEL=info
      - SERVER_PORT=8080
      - REDIS_URL=redis://:${REDIS_PSSWD}@redis
      - STANDALONE_CONTAINER=normal
      - DISABLE_AUCTION_HISTORY=false
      - DATABASE_CONNECTION_STRING=user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} host=postgres port=5432 dbname=${POSTGRES_DB}
    depends_on:
      - redis
      - postgres
      - job-runner
  job-runner:
    image: cpc/job-run
    volumes:
      - static_files:/data/static_files
    restart: unless-stopped
    environment:
      - CLIENT_ID
      - CLIENT_SECRET
      - LOG_LEVEL=info
      - REDIS_URL=redis://:${REDIS_PSSWD}@redis
    depends_on:
      - redis
  injest:
    image: cpc/injest
    volumes:
      - static_files:/data/static_files
    restart: unless-stopped
    environment:
      - CLIENT_ID
      - CLIENT_SECRET
      - LOG_LEVEL=info
      - REDIS_URL=redis://:${REDIS_PSSWD}@redis
      - DISABLE_AUCTION_HISTORY=false
      - DATABASE_CONNECTION_STRING=user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} host=postgres port=5432 dbname=${POSTGRES_DB}
    depends_on:
      - redis
      - postgres
  redis:
    image: redis:alpine
    restart: unless-stopped
    volumes:
      - "~/docker-dirs/cpc/reddis:/data"
    command: redis-server --save 380 15 --loglevel warning --requirepass ${REDIS_PSSWD}
  postgres:
    image: postgres:alpine
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - "~/docker-dirs/cpc/postgres:/var/lib/postgresql/data"

volumes:
  static_files: